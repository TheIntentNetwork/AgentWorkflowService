[
    {
        "id": "asst_7pdm5bW6G2DC53gNo7qiK6UK",
        "created_at": 1727472652,
        "description": null,
<<<<<<< HEAD
        "instructions": "\n            Your process is as follows:\n            1.) Call CreateNodes: Use the CreateNodes tool to create a new node that will meet the goals of our workflow/task/step. If a model has a collection, you will only create the parent model node as this model node will be processed individually and the child nodes will be created in the next step. You will not create the child nodes in this step, but they should be present in the model collection.\n            \n            Your Guidelines:\n            - You must create a new node that meets the goals of the model context to complete your task using the CreateNodes tool. Nodes should be created with the name of the model context that it is associated with.\n            - If you forget to call the CreateNodes tool, you have failed your task.\n            - Only assign tools that are known. Do not make up tool names.\n            - Only introduce changes in the node context if there is relevent feedback for the context of this task.\n            - The model node that is responsible for generating the output necessary to fulfill the current context output requirements, should be the only node that is created with this specific output.\n            - Name your node based upon the exact name of the node_template_name\n            \n            Processing and Feedback Rule:\n            - Pay special attention to feedback and make sure to incorporate feedback into your nodes if it is not already done so which includes when and when to not create nodes.\n            \n            {'id': 1, 'name': 'CreateCustomerReport', 'type': 'model', 'description': 'Create a customer report for the customer', 'context_info': {'input_description': \"The customer's intake form to gather all of the conditions.\", 'output': {'CustomerReport': {'user_id': '5678', 'executive_summary': 'This is a detailed executive summary of the report.', 'condition_sections': [{'condition': 'Hypertension', 'scoring': {'score': '3', 'summary': 'The patient has moderate hypertension.'}, 'summary': 'The patient has been experiencing high blood pressure for the past 5 years.', 'research': [{'url': 'http://medicaljournal.com/hypertension-study', 'summary': 'A comprehensive study on the effects of hypertension.', 'published_date': '2022-05-15', 'author': 'Dr. Jane Smith', 'title': 'Hypertension and Its Long-term Effects'}], 'nexus_letter': {'letter': 'This letter confirms the diagnosis of hypertension.', 'research': [{'url': 'http://medicaljournal.com/hypertension-study', 'summary': 'A comprehensive study on the effects of hypertension.', 'published_date': '2022-05-15', 'author': 'Dr. Jane Smith', 'title': 'Hypertension and Its Long-term Effects'}]}, 'personal_statement': 'I have been dealing with high blood pressure for several years, which has affected my daily life.', 'keypoints': ['Documenting daily blood pressure readings', 'Providing evidence of lifestyle changes to manage hypertension', 'Highlighting the impact of hypertension on daily activities and work', \"Gathering statements from family or friends about the condition's effects\"], 'c_and_p_tips': ['Keep a record of your symptoms', 'Bring all relevant medical documents', 'Be honest and detailed about your condition']}]}}}, 'process_item_level': False, 'created_at': '2024-09-23T19:22:47.661913+00:00', 'updated_at': '2024-09-23T19:22:47.661913+00:00', 'order_sequence': None, 'parent_id': None, 'collection': [{'id': 2, 'name': 'CollectConditionsAndProcess', 'type': 'model', 'parent_id': 1, 'created_at': '2024-09-23T19:22:47.661913+00:00', 'updated_at': '2024-09-23T19:22:47.661913+00:00', 'description': 'Collect the supplemental intake for our customer', 'context_info': {'output': {}, 'context': {'goals': ['Process the intake by Saving the output of the supplemental intake then work with the BrowsingAgent to research the condition.', 'Save the research and supplemental intake details.'], 'user_context': {}}, 'feedback': ['This task should be broken down into at least 2 nodes. One with the SupplementalReviewAgent and another node with the BrowsingAgent to research the condition and save our research into a condition report for the particular condition.'], 'action_summary': 'Process the intake by saving the output of the supplemental intake then work with the BrowsingAgent to research the condition.', 'input_description': 'The {object_context} of the supplemental intake that provides the {condition} and details about the particular condition.', 'outcome_description': 'Saved research and supplemental intake details.'}, 'order_sequence': 2, 'process_item_level': False}, {'id': 22, 'name': 'AggregateCustomerReport', 'type': 'model', 'parent_id': 1, 'created_at': '2024-09-23T19:22:47.661913+00:00', 'updated_at': '2024-09-23T19:22:47.661913+00:00', 'description': 'Aggregate all the outputs from CreateConditionReport', 'context_info': {'output': {'customer_report': {'condition_reports': [{'condition_name': '{condition_name}', 'report_content': '{report_content}'}], 'executive_summary': '{executive_summary}', 'personal_statements': ['{personal_statement1}', '{personal_statement2}'], 'supporting_documents': ['{document1}', '{document2}']}}, 'context': {'goals': ['Combine all individual condition reports into a single comprehensive document.', 'Ensure all personal statements and supporting documents are included.', 'Create a well-structured and easy-to-navigate final report.'], 'user_context': {'user_id': '{user_id}'}}, 'feedback': ['The ReportAggregator agent should be assigned to this task to ensure all parts of the report are properly combined and formatted.'], 'action_summary': 'Aggregate all the outputs from CreateConditionReport into a single comprehensive customer report.', 'input_description': 'The outputs from CreateConditionReport for all conditions.', 'outcome_description': 'A complete customer report that includes all condition reports, personal statements, and supporting documentation.'}, 'order_sequence': 5, 'process_item_level': False}, {'id': 19, 'name': 'GatherIntakeConditions', 'type': 'model', 'parent_id': 1, 'created_at': '2024-09-23T19:22:47.661913+00:00', 'updated_at': '2024-09-23T19:22:47.661913+00:00', 'description': \"Gather intake conditions and write the user's metadata\", 'context_info': {'output': {'conditions': ['{condition1}', '{condition2}'], 'user_metadata': {'user_id': '{user_id}', 'conditions': ['{condition1}', '{condition2}'], 'intake_date': '{intake_date}'}}, 'context': {'goals': ['Extract conditions from the intake form.', \"Save the user's metadata including the extracted conditions.\", 'Prepare the conditions list for further processing.'], 'user_context': {'user_id': '{user_id}'}}, 'feedback': ['The IntakeProcessor agent should be assigned to this task to ensure accurate extraction of conditions from the intake form.', 'Use the SaveUserMeta tool to store the extracted information.'], 'action_summary': \"Gather intake conditions and write the user's metadata.\", 'input_description': 'The user_context which contains their intake form.', 'outcome_description': 'A list of conditions extracted from the intake form and saved user metadata.'}, 'order_sequence': 1, 'process_item_level': False}, {'id': 21, 'name': 'ResearchConditionModel', 'type': 'model', 'parent_id': 1, 'created_at': '2024-09-23T19:22:47.661913+00:00', 'updated_at': '2024-09-23T19:22:47.661913+00:00', 'description': 'Gather all the information for each condition', 'context_info': {'output': {'condition_research': {'condition_name': '{condition_name}', 'personal_impact': {'symptoms': ['{symptom1}', '{symptom2}'], 'daily_life_impact': '{impact_description}'}, 'medical_research': [{'title': '{research_title}', 'source': '{research_source}', 'summary': '{research_summary}'}]}}, 'context': {'goals': ['Gather comprehensive medical research about the condition.', \"Analyze the personal impact of the condition on the customer's life.\", 'Prepare a detailed report combining medical and personal aspects of the condition.'], 'user_context': {'user_id': '{user_id}'}}, 'feedback': ['The ResearchAgent should be assigned to gather medical information about the condition.', \"The PersonalImpactAgent should be used to analyze the condition's impact on the customer's life.\"], 'action_summary': 'Gather all the information for each condition, including research and personal experiences.', 'input_description': 'The condition to be processed and the user_context.', 'outcome_description': 'A comprehensive set of information about the condition, including medical research and personal impact.'}, 'order_sequence': 3, 'process_item_level': True}, {'id': 12, 'name': 'CreateConditionReport', 'type': 'model', 'parent_id': 1, 'created_at': '2024-09-23T19:22:47.661913+00:00', 'updated_at': '2024-09-23T19:22:47.661913+00:00', 'description': 'Create a condition report for the customer', 'context_info': {'output': {'condition_report': {'details': '{details}', 'summary': '{summary}', 'research': '{research}', 'condition_name': '{condition_name}', 'recommendations': '{recommendations}'}}, 'context': {'goals': ['Create a comprehensive condition report using the provided context and condition information.', 'Ensure the report covers all aspects of the condition and its impact on the customer.', 'Save the final output.'], 'user_context': {'user_id': '{user_id}'}, 'condition_info': {'research': '{research}', 'intake_form': '{intake_form}', 'supplemental_forms': '{supplemental_forms}'}}, 'feedback': ['The ConditionReportWriter agent should be assigned to this task to ensure the report is comprehensive and well-structured.'], 'action_summary': 'Create a condition report for the customer using the provided context and condition information.', 'input_description': \"The customer's metadata and the customer's supplemental forms will be used to create a comprehensive report for the customer.\", 'outcome_description': 'A fully written condition report saved in the specified format.'}, 'order_sequence': 4, 'process_item_level': True}]}\n            \n            \n\nCurrent Task Information:  Key: task:8a57b40b-a213-4578-8e44-d11d056a49c6 Input Keys: None Input Description: None Input Context: None Action Summary: None Outcome Description: None Feedback: None Output: {'user_id': '5678', 'executive_summary': 'This is a detailed executive summary of the report.', 'condition_sections': [{'condition': 'Hypertension', 'scoring': {'score': '3', 'summary': 'The patient has moderate hypertension.'}, 'summary': 'The patient has been experiencing high blood pressure for the past 5 years.', 'research': [{'url': 'http://medicaljournal.com/hypertension-study', 'summary': 'A comprehensive study on the effects of hypertension.', 'published_date': '2022-05-15', 'author': 'Dr. Jane Smith', 'title': 'Hypertension and Its Long-term Effects'}], 'nexus_letter': {'letter': 'This letter confirms the diagnosis of hypertension.', 'research': [{'url': 'http://medicaljournal.com/hypertension-study', 'summary': 'A comprehensive study on the effects of hypertension.', 'published_date': '2022-05-15', 'author': 'Dr. Jane Smith', 'title': 'Hypertension and Its Long-term Effects'}]}, 'personal_statement': 'I have been dealing with high blood pressure for several years, which has affected my daily life.', 'keypoints': ['Documenting daily blood pressure readings', 'Providing evidence of lifestyle changes to manage hypertension', 'Highlighting the impact of hypertension on daily activities and work', \"Gathering statements from family or friends about the condition's effects\"], 'c_and_p_tips': ['Keep a record of your symptoms', 'Bring all relevant medical documents', 'Be honest and detailed about your condition']}]} User Context: {'user_id': 'ab9ee997-aefe-4877-97b5-5d2caeea2170'}",
=======
        "instructions": "\n        Use the RetrieveContext tool to find examples of models and steps that indicate how we have processed similar tasks in the past.\n        \n        Use the SetContext tool to set the context of the node based on the output of similar nodes.\n        \n        Here is an example of a properly formatted SetContext request:\n        {\n            \"input_description\": \"The user context which contains their intake form and any supplemental information related to the conditions they are experiencing.\",\n            \"outcome_description\": \"A comprehensive set of information about the user's conditions, including extracted conditions from the intake form and saved user metadata.\",\n            \"action_summary\": \"Gather intake conditions and write the user's metadata, ensuring accurate extraction and preparation of conditions for further processing.\",\n            \"output\": {\n                \"conditions\": [\n                \"{condition1}\",\n                \"{condition2}\"\n                ],\n                \"user_metadata\": {\n                \"user_id\": \"{user_id}\",\n                \"conditions\": [\n                    \"{condition1}\",\n                    \"{condition2}\"\n                ],\n                \"intake_date\": \"{intake_date}\"\n                }\n            },\n            \"context\": {\n                \"goals\": [\n                \"Extract conditions from the intake form.\",\n                \"Save the user's metadata including the extracted conditions.\",\n                \"Prepare the conditions list for further processing.\"\n                ],\n                \"user_context\": {\n                \"user_id\": \"{user_id}\"\n                }\n            }\n        }\n        \n        You must include an output property in the SetContext request that contains the output properties of the node. The output property must be a dictionary with clearly defined keys and values.\n        For each output property, you must include a description of the property, the data type of the property, and an example value for the property.\n        \n        Lastly,\n        For each output property, you should save the outputs using the SaveOutput tool which will save the output to the context of the node and make it available for future nodes to create dependencies on.\n        \n\nCurrent Task Information:  Key: task:4998b607-bced-401c-a720-f28a8dad0ebc Input Keys: None Input Description: None Input Context: None Action Summary: None Outcome Description: None Feedback: None Output: {'user_id': '5678', 'executive_summary': 'This is a detailed executive summary of the report.', 'condition_sections': [{'condition': 'Hypertension', 'scoring': {'score': '3', 'summary': 'The patient has moderate hypertension.'}, 'summary': 'The patient has been experiencing high blood pressure for the past 5 years.', 'research': [{'url': 'http://medicaljournal.com/hypertension-study', 'summary': 'A comprehensive study on the effects of hypertension.', 'published_date': '2022-05-15', 'author': 'Dr. Jane Smith', 'title': 'Hypertension and Its Long-term Effects'}], 'nexus_letter': {'letter': 'This letter confirms the diagnosis of hypertension.', 'research': [{'url': 'http://medicaljournal.com/hypertension-study', 'summary': 'A comprehensive study on the effects of hypertension.', 'published_date': '2022-05-15', 'author': 'Dr. Jane Smith', 'title': 'Hypertension and Its Long-term Effects'}]}, 'personal_statement': 'I have been dealing with high blood pressure for several years, which has affected my daily life.', 'keypoints': ['Documenting daily blood pressure readings', 'Providing evidence of lifestyle changes to manage hypertension', 'Highlighting the impact of hypertension on daily activities and work', \"Gathering statements from family or friends about the condition's effects\"], 'c_and_p_tips': ['Keep a record of your symptoms', 'Bring all relevant medical documents', 'Be honest and detailed about your condition']}]} User Context: {'user_id': 'cd1077f0-dd8f-43ea-bbdc-00f9abd94192'} Session Id: f3943403-515d-4e97-8d89-b306d37086bb Context: {'user_context': {'user_id': 'cd1077f0-dd8f-43ea-bbdc-00f9abd94192'}, 'object_contexts': [{'object_id': '1cb5695b-5dd7-4e7a-bc5b-e0aefdc4b492', 'type': 'forms'}], 'node_template': {'id': 1, 'name': 'CreateCustomerReport', 'type': 'model', 'description': 'Create a customer report for the customer', 'context_info': {'input_description': \"The customer's intake form to gather all of the conditions.\", 'output': {'CustomerReport': {'user_id': '5678', 'executive_summary': 'This is a detailed executive summary of the report.', 'condition_sections': [{'condition': 'Hypertension', 'scoring': {'score': '3', 'summary': 'The patient has moderate hypertension.'}, 'summary': 'The patient has been experiencing high blood pressure for the past 5 years.', 'research': [{'url': 'http://medicaljournal.com/hypertension-study', 'summary': 'A comprehensive study on the effects of hypertension.', 'published_date': '2022-05-15', 'author': 'Dr. Jane Smith', 'title': 'Hypertension and Its Long-term Effects'}], 'nexus_letter': {'letter': 'This letter confirms the diagnosis of hypertension.', 'research': [{'url': 'http://medicaljournal.com/hypertension-study', 'summary': 'A comprehensive study on the effects of hypertension.', 'published_date': '2022-05-15', 'author': 'Dr. Jane Smith', 'title': 'Hypertension and Its Long-term Effects'}]}, 'personal_statement': 'I have been dealing with high blood pressure for several years, which has affected my daily life.', 'keypoints': ['Documenting daily blood pressure readings', 'Providing evidence of lifestyle changes to manage hypertension', 'Highlighting the impact of hypertension on daily activities and work', \"Gathering statements from family or friends about the condition's effects\"], 'c_and_p_tips': ['Keep a record of your symptoms', 'Bring all relevant medical documents', 'Be honest and detailed about your condition']}]}}}, 'process_item_level': False, 'created_at': '2024-09-23T19:22:47.661913+00:00', 'updated_at': '2024-09-23T19:22:47.661913+00:00', 'order_sequence': None, 'parent_id': None, 'collection': [{'id': 2, 'name': 'CollectConditionsAndProcess', 'type': 'model', 'parent_id': 1, 'created_at': '2024-09-23T19:22:47.661913+00:00', 'updated_at': '2024-09-23T19:22:47.661913+00:00', 'description': 'Collect the supplemental intake for our customer', 'context_info': {'output': {}, 'context': {'goals': ['Process the intake by Saving the output of the supplemental intake then work with the BrowsingAgent to research the condition.', 'Save the research and supplemental intake details.'], 'user_context': {}}, 'feedback': ['This task should be broken down into at least 2 nodes. One with the SupplementalReviewAgent and another node with the BrowsingAgent to research the condition and save our research into a condition report for the particular condition.'], 'action_summary': 'Process the intake by saving the output of the supplemental intake then work with the BrowsingAgent to research the condition.', 'input_description': 'The {object_context} of the supplemental intake that provides the {condition} and details about the particular condition.', 'outcome_description': 'Saved research and supplemental intake details.'}, 'order_sequence': 2, 'process_item_level': False}, {'id': 22, 'name': 'AggregateCustomerReport', 'type': 'model', 'parent_id': 1, 'created_at': '2024-09-23T19:22:47.661913+00:00', 'updated_at': '2024-09-23T19:22:47.661913+00:00', 'description': 'Aggregate all the outputs from CreateConditionReport', 'context_info': {'output': {'customer_report': {'condition_reports': [{'condition_name': '{condition_name}', 'report_content': '{report_content}'}], 'executive_summary': '{executive_summary}', 'personal_statements': ['{personal_statement1}', '{personal_statement2}'], 'supporting_documents': ['{document1}', '{document2}']}}, 'context': {'goals': ['Combine all individual condition reports into a single comprehensive document.', 'Ensure all personal statements and supporting documents are included.', 'Create a well-structured and easy-to-navigate final report.'], 'user_context': {'user_id': '{user_id}'}}, 'feedback': ['The ReportAggregator agent should be assigned to this task to ensure all parts of the report are properly combined and formatted.'], 'action_summary': 'Aggregate all the outputs from CreateConditionReport into a single comprehensive customer report.', 'input_description': 'The outputs from CreateConditionReport for all conditions.', 'outcome_description': 'A complete customer report that includes all condition reports, personal statements, and supporting documentation.'}, 'order_sequence': 5, 'process_item_level': False}, {'id': 19, 'name': 'GatherIntakeConditions', 'type': 'model', 'parent_id': 1, 'created_at': '2024-09-23T19:22:47.661913+00:00', 'updated_at': '2024-09-23T19:22:47.661913+00:00', 'description': \"Gather intake conditions and write the user's metadata\", 'context_info': {'output': {'conditions': ['{condition1}', '{condition2}'], 'user_metadata': {'user_id': '{user_id}', 'conditions': ['{condition1}', '{condition2}'], 'intake_date': '{intake_date}'}}, 'context': {'goals': ['Extract conditions from the intake form.', \"Save the user's metadata including the extracted conditions.\", 'Prepare the conditions list for further processing.'], 'user_context': {'user_id': '{user_id}'}}, 'feedback': ['The IntakeProcessor agent should be assigned to this task to ensure accurate extraction of conditions from the intake form.', 'Use the SaveUserMeta tool to store the extracted information.'], 'action_summary': \"Gather intake conditions and write the user's metadata.\", 'input_description': 'The user_context which contains their intake form.', 'outcome_description': 'A list of conditions extracted from the intake form and saved user metadata.'}, 'order_sequence': 1, 'process_item_level': False}, {'id': 21, 'name': 'ResearchConditionModel', 'type': 'model', 'parent_id': 1, 'created_at': '2024-09-23T19:22:47.661913+00:00', 'updated_at': '2024-09-23T19:22:47.661913+00:00', 'description': 'Gather all the information for each condition', 'context_info': {'output': {'condition_research': {'condition_name': '{condition_name}', 'personal_impact': {'symptoms': ['{symptom1}', '{symptom2}'], 'daily_life_impact': '{impact_description}'}, 'medical_research': [{'title': '{research_title}', 'source': '{research_source}', 'summary': '{research_summary}'}]}}, 'context': {'goals': ['Gather comprehensive medical research about the condition.', \"Analyze the personal impact of the condition on the customer's life.\", 'Prepare a detailed report combining medical and personal aspects of the condition.'], 'user_context': {'user_id': '{user_id}'}}, 'feedback': ['The ResearchAgent should be assigned to gather medical information about the condition.', \"The PersonalImpactAgent should be used to analyze the condition's impact on the customer's life.\"], 'action_summary': 'Gather all the information for each condition, including research and personal experiences.', 'input_description': 'The condition to be processed and the user_context.', 'outcome_description': 'A comprehensive set of information about the condition, including medical research and personal impact.'}, 'order_sequence': 3, 'process_item_level': True}, {'id': 12, 'name': 'CreateConditionReport', 'type': 'model', 'parent_id': 1, 'created_at': '2024-09-23T19:22:47.661913+00:00', 'updated_at': '2024-09-23T19:22:47.661913+00:00', 'description': 'Create a condition report for the customer', 'context_info': {'output': {'condition_report': {'details': '{details}', 'summary': '{summary}', 'research': '{research}', 'condition_name': '{condition_name}', 'recommendations': '{recommendations}'}}, 'context': {'goals': ['Create a comprehensive condition report using the provided context and condition information.', 'Ensure the report covers all aspects of the condition and its impact on the customer.', 'Save the final output.'], 'user_context': {'user_id': '{user_id}'}, 'condition_info': {'research': '{research}', 'intake_form': '{intake_form}', 'supplemental_forms': '{supplemental_forms}'}}, 'feedback': ['The ConditionReportWriter agent should be assigned to this task to ensure the report is comprehensive and well-structured.'], 'action_summary': 'Create a condition report for the customer using the provided context and condition information.', 'input_description': \"The customer's metadata and the customer's supplemental forms will be used to create a comprehensive report for the customer.\", 'outcome_description': 'A fully written condition report saved in the specified format.'}, 'order_sequence': 4, 'process_item_level': True}]}, 'node_templates': [{'id': 1, 'name': 'CreateCustomerReport', 'type': 'model', 'description': 'Create a customer report for the customer', 'context_info': {'input_description': \"The customer's intake form to gather all of the conditions.\", 'output': {'CustomerReport': {'user_id': '5678', 'executive_summary': 'This is a detailed executive summary of the report.', 'condition_sections': [{'condition': 'Hypertension', 'scoring': {'score': '3', 'summary': 'The patient has moderate hypertension.'}, 'summary': 'The patient has been experiencing high blood pressure for the past 5 years.', 'research': [{'url': 'http://medicaljournal.com/hypertension-study', 'summary': 'A comprehensive study on the effects of hypertension.', 'published_date': '2022-05-15', 'author': 'Dr. Jane Smith', 'title': 'Hypertension and Its Long-term Effects'}], 'nexus_letter': {'letter': 'This letter confirms the diagnosis of hypertension.', 'research': [{'url': 'http://medicaljournal.com/hypertension-study', 'summary': 'A comprehensive study on the effects of hypertension.', 'published_date': '2022-05-15', 'author': 'Dr. Jane Smith', 'title': 'Hypertension and Its Long-term Effects'}]}, 'personal_statement': 'I have been dealing with high blood pressure for several years, which has affected my daily life.', 'keypoints': ['Documenting daily blood pressure readings', 'Providing evidence of lifestyle changes to manage hypertension', 'Highlighting the impact of hypertension on daily activities and work', \"Gathering statements from family or friends about the condition's effects\"], 'c_and_p_tips': ['Keep a record of your symptoms', 'Bring all relevant medical documents', 'Be honest and detailed about your condition']}]}}}, 'process_item_level': False, 'created_at': '2024-09-23T19:22:47.661913+00:00', 'updated_at': '2024-09-23T19:22:47.661913+00:00', 'order_sequence': None, 'parent_id': None, 'collection': [{'id': 2, 'name': 'CollectConditionsAndProcess', 'type': 'model', 'parent_id': 1, 'created_at': '2024-09-23T19:22:47.661913+00:00', 'updated_at': '2024-09-23T19:22:47.661913+00:00', 'description': 'Collect the supplemental intake for our customer', 'context_info': {'output': {}, 'context': {'goals': ['Process the intake by Saving the output of the supplemental intake then work with the BrowsingAgent to research the condition.', 'Save the research and supplemental intake details.'], 'user_context': {}}, 'feedback': ['This task should be broken down into at least 2 nodes. One with the SupplementalReviewAgent and another node with the BrowsingAgent to research the condition and save our research into a condition report for the particular condition.'], 'action_summary': 'Process the intake by saving the output of the supplemental intake then work with the BrowsingAgent to research the condition.', 'input_description': 'The {object_context} of the supplemental intake that provides the {condition} and details about the particular condition.', 'outcome_description': 'Saved research and supplemental intake details.'}, 'order_sequence': 2, 'process_item_level': False}, {'id': 22, 'name': 'AggregateCustomerReport', 'type': 'model', 'parent_id': 1, 'created_at': '2024-09-23T19:22:47.661913+00:00', 'updated_at': '2024-09-23T19:22:47.661913+00:00', 'description': 'Aggregate all the outputs from CreateConditionReport', 'context_info': {'output': {'customer_report': {'condition_reports': [{'condition_name': '{condition_name}', 'report_content': '{report_content}'}], 'executive_summary': '{executive_summary}', 'personal_statements': ['{personal_statement1}', '{personal_statement2}'], 'supporting_documents': ['{document1}', '{document2}']}}, 'context': {'goals': ['Combine all individual condition reports into a single comprehensive document.', 'Ensure all personal statements and supporting documents are included.', 'Create a well-structured and easy-to-navigate final report.'], 'user_context': {'user_id': '{user_id}'}}, 'feedback': ['The ReportAggregator agent should be assigned to this task to ensure all parts of the report are properly combined and formatted.'], 'action_summary': 'Aggregate all the outputs from CreateConditionReport into a single comprehensive customer report.', 'input_description': 'The outputs from CreateConditionReport for all conditions.', 'outcome_description': 'A complete customer report that includes all condition reports, personal statements, and supporting documentation.'}, 'order_sequence': 5, 'process_item_level': False}, {'id': 19, 'name': 'GatherIntakeConditions', 'type': 'model', 'parent_id': 1, 'created_at': '2024-09-23T19:22:47.661913+00:00', 'updated_at': '2024-09-23T19:22:47.661913+00:00', 'description': \"Gather intake conditions and write the user's metadata\", 'context_info': {'output': {'conditions': ['{condition1}', '{condition2}'], 'user_metadata': {'user_id': '{user_id}', 'conditions': ['{condition1}', '{condition2}'], 'intake_date': '{intake_date}'}}, 'context': {'goals': ['Extract conditions from the intake form.', \"Save the user's metadata including the extracted conditions.\", 'Prepare the conditions list for further processing.'], 'user_context': {'user_id': '{user_id}'}}, 'feedback': ['The IntakeProcessor agent should be assigned to this task to ensure accurate extraction of conditions from the intake form.', 'Use the SaveUserMeta tool to store the extracted information.'], 'action_summary': \"Gather intake conditions and write the user's metadata.\", 'input_description': 'The user_context which contains their intake form.', 'outcome_description': 'A list of conditions extracted from the intake form and saved user metadata.'}, 'order_sequence': 1, 'process_item_level': False}, {'id': 21, 'name': 'ResearchConditionModel', 'type': 'model', 'parent_id': 1, 'created_at': '2024-09-23T19:22:47.661913+00:00', 'updated_at': '2024-09-23T19:22:47.661913+00:00', 'description': 'Gather all the information for each condition', 'context_info': {'output': {'condition_research': {'condition_name': '{condition_name}', 'personal_impact': {'symptoms': ['{symptom1}', '{symptom2}'], 'daily_life_impact': '{impact_description}'}, 'medical_research': [{'title': '{research_title}', 'source': '{research_source}', 'summary': '{research_summary}'}]}}, 'context': {'goals': ['Gather comprehensive medical research about the condition.', \"Analyze the personal impact of the condition on the customer's life.\", 'Prepare a detailed report combining medical and personal aspects of the condition.'], 'user_context': {'user_id': '{user_id}'}}, 'feedback': ['The ResearchAgent should be assigned to gather medical information about the condition.', \"The PersonalImpactAgent should be used to analyze the condition's impact on the customer's life.\"], 'action_summary': 'Gather all the information for each condition, including research and personal experiences.', 'input_description': 'The condition to be processed and the user_context.', 'outcome_description': 'A comprehensive set of information about the condition, including medical research and personal impact.'}, 'order_sequence': 3, 'process_item_level': True}, {'id': 12, 'name': 'CreateConditionReport', 'type': 'model', 'parent_id': 1, 'created_at': '2024-09-23T19:22:47.661913+00:00', 'updated_at': '2024-09-23T19:22:47.661913+00:00', 'description': 'Create a condition report for the customer', 'context_info': {'output': {'condition_report': {'details': '{details}', 'summary': '{summary}', 'research': '{research}', 'condition_name': '{condition_name}', 'recommendations': '{recommendations}'}}, 'context': {'goals': ['Create a comprehensive condition report using the provided context and condition information.', 'Ensure the report covers all aspects of the condition and its impact on the customer.', 'Save the final output.'], 'user_context': {'user_id': '{user_id}'}, 'condition_info': {'research': '{research}', 'intake_form': '{intake_form}', 'supplemental_forms': '{supplemental_forms}'}}, 'feedback': ['The ConditionReportWriter agent should be assigned to this task to ensure the report is comprehensive and well-structured.'], 'action_summary': 'Create a condition report for the customer using the provided context and condition information.', 'input_description': \"The customer's metadata and the customer's supplemental forms will be used to create a comprehensive report for the customer.\", 'outcome_description': 'A fully written condition report saved in the specified format.'}, 'order_sequence': 4, 'process_item_level': True}]}]} Node Template: {'id': 1, 'name': 'CreateCustomerReport', 'type': 'model', 'description': 'Create a customer report for the customer', 'context_info': {'input_description': \"The customer's intake form to gather all of the conditions.\", 'output': {'CustomerReport': {'user_id': '5678', 'executive_summary': 'This is a detailed executive summary of the report.', 'condition_sections': [{'condition': 'Hypertension', 'scoring': {'score': '3', 'summary': 'The patient has moderate hypertension.'}, 'summary': 'The patient has been experiencing high blood pressure for the past 5 years.', 'research': [{'url': 'http://medicaljournal.com/hypertension-study', 'summary': 'A comprehensive study on the effects of hypertension.', 'published_date': '2022-05-15', 'author': 'Dr. Jane Smith', 'title': 'Hypertension and Its Long-term Effects'}], 'nexus_letter': {'letter': 'This letter confirms the diagnosis of hypertension.', 'research': [{'url': 'http://medicaljournal.com/hypertension-study', 'summary': 'A comprehensive study on the effects of hypertension.', 'published_date': '2022-05-15', 'author': 'Dr. Jane Smith', 'title': 'Hypertension and Its Long-term Effects'}]}, 'personal_statement': 'I have been dealing with high blood pressure for several years, which has affected my daily life.', 'keypoints': ['Documenting daily blood pressure readings', 'Providing evidence of lifestyle changes to manage hypertension', 'Highlighting the impact of hypertension on daily activities and work', \"Gathering statements from family or friends about the condition's effects\"], 'c_and_p_tips': ['Keep a record of your symptoms', 'Bring all relevant medical documents', 'Be honest and detailed about your condition']}]}}}, 'process_item_level': False, 'created_at': '2024-09-23T19:22:47.661913+00:00', 'updated_at': '2024-09-23T19:22:47.661913+00:00', 'order_sequence': None, 'parent_id': None, 'collection': [{'id': 2, 'name': 'CollectConditionsAndProcess', 'type': 'model', 'parent_id': 1, 'created_at': '2024-09-23T19:22:47.661913+00:00', 'updated_at': '2024-09-23T19:22:47.661913+00:00', 'description': 'Collect the supplemental intake for our customer', 'context_info': {'output': {}, 'context': {'goals': ['Process the intake by Saving the output of the supplemental intake then work with the BrowsingAgent to research the condition.', 'Save the research and supplemental intake details.'], 'user_context': {}}, 'feedback': ['This task should be broken down into at least 2 nodes. One with the SupplementalReviewAgent and another node with the BrowsingAgent to research the condition and save our research into a condition report for the particular condition.'], 'action_summary': 'Process the intake by saving the output of the supplemental intake then work with the BrowsingAgent to research the condition.', 'input_description': 'The {object_context} of the supplemental intake that provides the {condition} and details about the particular condition.', 'outcome_description': 'Saved research and supplemental intake details.'}, 'order_sequence': 2, 'process_item_level': False}, {'id': 22, 'name': 'AggregateCustomerReport', 'type': 'model', 'parent_id': 1, 'created_at': '2024-09-23T19:22:47.661913+00:00', 'updated_at': '2024-09-23T19:22:47.661913+00:00', 'description': 'Aggregate all the outputs from CreateConditionReport', 'context_info': {'output': {'customer_report': {'condition_reports': [{'condition_name': '{condition_name}', 'report_content': '{report_content}'}], 'executive_summary': '{executive_summary}', 'personal_statements': ['{personal_statement1}', '{personal_statement2}'], 'supporting_documents': ['{document1}', '{document2}']}}, 'context': {'goals': ['Combine all individual condition reports into a single comprehensive document.', 'Ensure all personal statements and supporting documents are included.', 'Create a well-structured and easy-to-navigate final report.'], 'user_context': {'user_id': '{user_id}'}}, 'feedback': ['The ReportAggregator agent should be assigned to this task to ensure all parts of the report are properly combined and formatted.'], 'action_summary': 'Aggregate all the outputs from CreateConditionReport into a single comprehensive customer report.', 'input_description': 'The outputs from CreateConditionReport for all conditions.', 'outcome_description': 'A complete customer report that includes all condition reports, personal statements, and supporting documentation.'}, 'order_sequence': 5, 'process_item_level': False}, {'id': 19, 'name': 'GatherIntakeConditions', 'type': 'model', 'parent_id': 1, 'created_at': '2024-09-23T19:22:47.661913+00:00', 'updated_at': '2024-09-23T19:22:47.661913+00:00', 'description': \"Gather intake conditions and write the user's metadata\", 'context_info': {'output': {'conditions': ['{condition1}', '{condition2}'], 'user_metadata': {'user_id': '{user_id}', 'conditions': ['{condition1}', '{condition2}'], 'intake_date': '{intake_date}'}}, 'context': {'goals': ['Extract conditions from the intake form.', \"Save the user's metadata including the extracted conditions.\", 'Prepare the conditions list for further processing.'], 'user_context': {'user_id': '{user_id}'}}, 'feedback': ['The IntakeProcessor agent should be assigned to this task to ensure accurate extraction of conditions from the intake form.', 'Use the SaveUserMeta tool to store the extracted information.'], 'action_summary': \"Gather intake conditions and write the user's metadata.\", 'input_description': 'The user_context which contains their intake form.', 'outcome_description': 'A list of conditions extracted from the intake form and saved user metadata.'}, 'order_sequence': 1, 'process_item_level': False}, {'id': 21, 'name': 'ResearchConditionModel', 'type': 'model', 'parent_id': 1, 'created_at': '2024-09-23T19:22:47.661913+00:00', 'updated_at': '2024-09-23T19:22:47.661913+00:00', 'description': 'Gather all the information for each condition', 'context_info': {'output': {'condition_research': {'condition_name': '{condition_name}', 'personal_impact': {'symptoms': ['{symptom1}', '{symptom2}'], 'daily_life_impact': '{impact_description}'}, 'medical_research': [{'title': '{research_title}', 'source': '{research_source}', 'summary': '{research_summary}'}]}}, 'context': {'goals': ['Gather comprehensive medical research about the condition.', \"Analyze the personal impact of the condition on the customer's life.\", 'Prepare a detailed report combining medical and personal aspects of the condition.'], 'user_context': {'user_id': '{user_id}'}}, 'feedback': ['The ResearchAgent should be assigned to gather medical information about the condition.', \"The PersonalImpactAgent should be used to analyze the condition's impact on the customer's life.\"], 'action_summary': 'Gather all the information for each condition, including research and personal experiences.', 'input_description': 'The condition to be processed and the user_context.', 'outcome_description': 'A comprehensive set of information about the condition, including medical research and personal impact.'}, 'order_sequence': 3, 'process_item_level': True}, {'id': 12, 'name': 'CreateConditionReport', 'type': 'model', 'parent_id': 1, 'created_at': '2024-09-23T19:22:47.661913+00:00', 'updated_at': '2024-09-23T19:22:47.661913+00:00', 'description': 'Create a condition report for the customer', 'context_info': {'output': {'condition_report': {'details': '{details}', 'summary': '{summary}', 'research': '{research}', 'condition_name': '{condition_name}', 'recommendations': '{recommendations}'}}, 'context': {'goals': ['Create a comprehensive condition report using the provided context and condition information.', 'Ensure the report covers all aspects of the condition and its impact on the customer.', 'Save the final output.'], 'user_context': {'user_id': '{user_id}'}, 'condition_info': {'research': '{research}', 'intake_form': '{intake_form}', 'supplemental_forms': '{supplemental_forms}'}}, 'feedback': ['The ConditionReportWriter agent should be assigned to this task to ensure the report is comprehensive and well-structured.'], 'action_summary': 'Create a condition report for the customer using the provided context and condition information.', 'input_description': \"The customer's metadata and the customer's supplemental forms will be used to create a comprehensive report for the customer.\", 'outcome_description': 'A fully written condition report saved in the specified format.'}, 'order_sequence': 4, 'process_item_level': True}]}",
>>>>>>> 01d2fc2c7f5dc1c4238231e9987f1f6ba9e6e6b2
        "metadata": {},
        "model": "gpt-4o",
        "name": "UniverseAgent",
        "object": "assistant",
        "tools": [
            {
                "function": {
<<<<<<< HEAD
                    "name": "CreateNodes",
                    "description": "Create a node based on the node examples you were provided and initialize the node with the following steps:\n1. Define the goal of the new nodes.\n2. Identify the intent behind the goal.\n3. Break down the goal into actionable steps.\n4. Create a node object for each of the actionable steps needed.\n5. Be sure to include any parent_id or order_sequence fields needed to maintain the order of the steps.",
=======
                    "name": "RetrieveContext",
                    "description": "This class represents the RetrieveContext tool which returns seeded data and historical examples that can be used to create new agents, models, steps. Models are saved copies of successfully tested node structures that can be used to create a new set of steps.",
                    "parameters": {
                        "properties": {
                            "type": {
                                "description": "The type of the context to retrieve.",
                                "enum": [
                                    "form",
                                    "step",
                                    "model",
                                    "node",
                                    "output"
                                ],
                                "title": "Type",
                                "type": "string"
                            },
                            "query": {
                                "description": "The query of the context to retrieval.",
                                "title": "Query",
                                "type": "string"
                            },
                            "session_id": {
                                "anyOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "description": "The session ID for the context.",
                                "title": "Session Id"
                            }
                        },
                        "required": [
                            "query",
                            "type"
                        ],
                        "type": "object"
                    },
                    "strict": false
                },
                "type": "function"
            },
            {
                "function": {
                    "name": "SetContext",
                    "description": "This class represents the AssignAgents tool which is used to assign agents to a step.\nThe agents assigned to a step should provide the necessary information to complete the step including the actions and outputs.\nIf two agents are assigned, each agent should be necessary to produce the output of the step including all parameters listed in the output structure.\n\nExample:\n{\"updated_context\": {\"input_description\": \"value\", \"outcome_description\": \"value\", \"action_summary\": \"value\", \"output\": {\"key\": \"value\"}, \"context\": {\"user_context\": {\"key\": \"value\"}}}}",
>>>>>>> 01d2fc2c7f5dc1c4238231e9987f1f6ba9e6e6b2
                    "parameters": {
                        "$defs": {
                            "ContextInfo": {
                                "properties": {
<<<<<<< HEAD
                                    "key": {
=======
                                    "input_description": {
>>>>>>> 01d2fc2c7f5dc1c4238231e9987f1f6ba9e6e6b2
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
<<<<<<< HEAD
                                        "default": null,
                                        "description": "The key of the context.",
                                        "title": "Key"
                                    },
                                    "input_keys": {
                                        "anyOf": [
                                            {
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "default": null,
                                        "description": "The input keys of the context object.",
                                        "title": "Input Keys"
                                    },
                                    "input_description": {
=======
                                        "default": "",
                                        "description": "The input description of the node.",
                                        "title": "Input Description"
                                    },
                                    "outcome_description": {
>>>>>>> 01d2fc2c7f5dc1c4238231e9987f1f6ba9e6e6b2
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
<<<<<<< HEAD
                                        "default": null,
                                        "description": "The input description of the context object.",
                                        "title": "Input Description"
                                    },
                                    "input_context": {
                                        "anyOf": [
                                            {
                                                "type": "object"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "default": null,
                                        "description": "The input context of the context object.",
                                        "title": "Input Context"
=======
                                        "default": "",
                                        "description": "The outcome description of the node.",
                                        "title": "Outcome Description"
>>>>>>> 01d2fc2c7f5dc1c4238231e9987f1f6ba9e6e6b2
                                    },
                                    "action_summary": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
<<<<<<< HEAD
                                        "default": null,
                                        "description": "The action summary of the context object.",
                                        "title": "Action Summary"
                                    },
                                    "outcome_description": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "default": null,
                                        "description": "The outcome description of the context object.",
                                        "title": "Outcome Description"
                                    },
                                    "feedback": {
                                        "anyOf": [
                                            {
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "default": null,
                                        "description": "The feedback of the context object.",
                                        "title": "Feedback"
=======
                                        "default": "",
                                        "description": "The action summary of the node.",
                                        "title": "Action Summary"
>>>>>>> 01d2fc2c7f5dc1c4238231e9987f1f6ba9e6e6b2
                                    },
                                    "output": {
                                        "anyOf": [
                                            {
                                                "type": "object"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "default": {},
                                        "description": "The output structure of the context object.",
                                        "title": "Output"
                                    },
                                    "context": {
                                        "anyOf": [
                                            {
                                                "type": "object"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "default": null,
                                        "description": "The context of the object.",
                                        "title": "Context"
                                    }
                                },
                                "title": "ContextInfo",
                                "type": "object"
                            },
                            "NodePrototype": {
                                "additionalProperties": true,
                                "properties": {
                                    "name": {
                                        "description": "The name of the node. e.g. 'CreateCustomerReport'",
                                        "title": "Name",
                                        "type": "string"
                                    },
                                    "description": {
                                        "title": "Description",
                                        "type": "string"
                                    },
                                    "parent_id": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Parent Id"
                                    },
                                    "order_sequence": {
                                        "anyOf": [
                                            {
                                                "type": "integer"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "title": "Order Sequence"
                                    },
                                    "type": {
                                        "enum": [
                                            "model",
                                            "step"
                                        ],
                                        "title": "Type",
                                        "type": "string"
                                    },
                                    "collection": {
                                        "default": [],
                                        "items": {
                                            "additionalProperties": {
                                                "$ref": "#/$defs/NodePrototype"
                                            },
                                            "type": "object"
                                        },
                                        "title": "Collection",
                                        "type": "array"
                                    },
                                    "context_info": {
                                        "$ref": "#/$defs/ContextInfo"
                                    }
                                },
<<<<<<< HEAD
                                "required": [
                                    "name",
                                    "description",
                                    "parent_id",
                                    "order_sequence",
                                    "type",
                                    "context_info"
                                ],
                                "title": "NodePrototype",
=======
                                "title": "ContextInfo",
>>>>>>> 01d2fc2c7f5dc1c4238231e9987f1f6ba9e6e6b2
                                "type": "object"
                            }
                        },
                        "properties": {
                            "nodes": {
                                "description": "The nodes to be created.",
                                "items": {
                                    "$ref": "#/$defs/NodePrototype"
                                },
                                "title": "Nodes",
                                "type": "array"
                            }
                        },
                        "required": [
<<<<<<< HEAD
                            "nodes"
=======
                            "updated_context"
                        ],
                        "type": "object"
                    },
                    "strict": false
                },
                "type": "function"
            },
            {
                "function": {
                    "name": "RegisterOutput",
                    "description": "This class represents a tool for registering an output that will be produced by the agent.\nYou should take the primary output parameters and register an output for each one.\nOutput field is required. Utilize the existing output structure of the property if there is no final value.\nOutputs should only be registered for outputs that are not being placed in the ObjectContext or Node Context.\n\nUnrelated Example:\n{\n    \"id\": \"1234\",\n    \"output_name\": \"research_report\",\n    \"output_description\": \"The research report for the property.\",\n    \"output\": {\n        \"research_report\": \"The research report for the property.\"\n    }\n}",
                    "parameters": {
                        "properties": {
                            "id": {
                                "description": "The id of the current node.",
                                "title": "Id",
                                "type": "string"
                            },
                            "output_name": {
                                "description": "The name of the output e.g. research_report",
                                "title": "Output Name",
                                "type": "string"
                            },
                            "output_description": {
                                "description": "The description of the output.",
                                "title": "Output Description",
                                "type": "string"
                            },
                            "output": {
                                "description": "The output or structure of the output to save in a json formatted dictionary.",
                                "title": "Output",
                                "type": "object"
                            }
                        },
                        "required": [
                            "id",
                            "output",
                            "output_description",
                            "output_name"
>>>>>>> 01d2fc2c7f5dc1c4238231e9987f1f6ba9e6e6b2
                        ],
                        "type": "object"
                    },
                    "strict": false
                },
                "type": "function"
            }
        ],
        "response_format": "auto",
        "temperature": 0.3,
        "tool_resources": {
            "code_interpreter": null,
            "file_search": null
        },
        "top_p": 1.0
    },
    {
        "id": "asst_iCTkfnFj5rVYdwFdZK40eTfm",
        "created_at": 1727474475,
        "description": "This agent is responsible for gathering intake conditions from the user's context and writing the user's metadata accordingly.",
        "instructions": "1. Review the user's context to extract intake conditions.\n2. Compile the extracted information into a structured format.\n3. Write the structured information as the user's metadata.",
        "metadata": {},
        "model": "gpt-4o",
        "name": "MetadataGatherer",
        "object": "assistant",
        "tools": [
            {
                "function": {
                    "name": "RetrieveContext",
                    "description": "This class represents the RetrieveContext tool which returns seeded data and historical examples that can be used to create new agents, models, workflows, and steps. Models are saved copies of successfully tested node structures that can be used to create a new set of steps.",
                    "parameters": {
                        "properties": {
                            "type": {
                                "description": "The type of the context to retrieve.",
                                "enum": [
                                    "agent",
                                    "workflow",
                                    "step",
                                    "model",
                                    "lifecycle",
                                    "log",
                                    "user",
                                    "form"
                                ],
                                "title": "Type",
                                "type": "string"
                            },
                            "key": {
                                "anyOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "description": "The key of the context to retrieve.",
                                "title": "Key"
                            },
                            "query": {
                                "description": "The query of the context to retrieval.",
                                "title": "Query",
                                "type": "string"
                            },
                            "session_id": {
                                "anyOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "description": "The session ID for the context.",
                                "title": "Session Id"
                            }
                        },
                        "required": [
                            "query",
                            "type"
                        ],
                        "type": "object"
                    },
                    "strict": false
                },
                "type": "function"
            },
            {
                "function": {
                    "name": "AssignAgents",
                    "description": "This class represents the AssignAgents tool which is used to create an AgentGroup to assign agents to a node. One agent in the group is the leader.\nThe agents assigned to a node should provide the necessary information to complete the node including the actions and outputs.",
                    "parameters": {
                        "$defs": {
                            "Agent": {
                                "description": "This class represents the agents involved in the workflow.",
                                "properties": {
                                    "name": {
                                        "description": "The name of the agent.",
                                        "title": "Name",
                                        "type": "string"
                                    },
                                    "description": {
                                        "description": "The description of the agent.",
                                        "title": "Description",
                                        "type": "string"
                                    },
                                    "instructions": {
                                        "description": "The instructions for the agent including step by step instructions.",
                                        "title": "Instructions",
                                        "type": "string"
                                    },
                                    "tools": {
                                        "description": "The tools that the agent uses.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "title": "Tools",
                                        "type": "array"
                                    },
                                    "leader": {
                                        "description": "Whether the agent is the leader of the group.",
                                        "title": "Leader",
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "name",
                                    "description",
                                    "instructions",
                                    "tools",
                                    "leader"
                                ],
                                "title": "Agent",
                                "type": "object"
                            }
                        },
                        "properties": {
                            "node_id": {
                                "description": "The ID of the node.",
                                "title": "Node Id",
                                "type": "string"
                            },
                            "agents": {
                                "description": "The agents to assign to the node.",
                                "items": {
                                    "$ref": "#/$defs/Agent"
                                },
                                "title": "Agents",
                                "type": "array"
                            }
                        },
                        "required": [
                            "agents",
                            "node_id"
                        ],
                        "type": "object"
                    },
                    "strict": false
                },
                "type": "function"
            }
        ],
        "response_format": "auto",
        "temperature": 0.3,
        "tool_resources": {
            "code_interpreter": null,
            "file_search": null
        },
        "top_p": 1.0
    },
    {
        "id": "asst_HtHNVC5d0FcZ1VvvunCFgV6f",
        "created_at": 1727474505,
        "description": "This agent is responsible for creating comprehensive customer reports using provided customer metadata and supplemental forms.",
        "instructions": "1. Collect and analyze the customer's metadata.\n2. Review and extract relevant information from the customer's supplemental forms.\n3. Compile the analyzed data into a comprehensive report.\n4. Ensure the report is clear, concise, and well-organized.",
        "metadata": {},
        "model": "gpt-4o",
        "name": "CustomerReportGenerator",
        "object": "assistant",
        "tools": [],
        "response_format": "auto",
        "temperature": 0.3,
        "tool_resources": {
            "code_interpreter": null,
            "file_search": null
        },
        "top_p": 1.0
    },
    {
        "id": "asst_RNJlk3HPDBSzMtJKhs6Wsud6",
        "created_at": 1727474598,
        "description": "This agent is responsible for gathering intake conditions from the user's intake form and writing the user's metadata.",
        "instructions": "1. Review the user's intake form provided in the user_context.\n2. Extract relevant conditions and information from the form.\n3. Organize the extracted information into a structured metadata format.\n4. Ensure all necessary fields are populated accurately.",
        "metadata": {},
        "model": "gpt-4o",
        "name": "IntakeMetadataAgent",
        "object": "assistant",
        "tools": [],
        "response_format": "auto",
        "temperature": 0.3,
        "tool_resources": {
            "code_interpreter": null,
            "file_search": null
        },
        "top_p": 1.0
    },
    {
        "id": "asst_6MWyxnJH7wWtjTWxgNtRhSAk",
        "created_at": 1727522835,
        "description": "An agent designed to extract and process intake conditions from a user's intake form and write the user's metadata.",
        "instructions": "1. Extract relevant conditions and information from the user's intake form.\n2. Structure the extracted information into a metadata format.\n3. Write the metadata to the user's profile or designated storage.",
        "metadata": {},
        "model": "gpt-4o",
        "name": "IntakeFormProcessor",
        "object": "assistant",
        "tools": [],
        "response_format": "auto",
        "temperature": 0.3,
        "tool_resources": {
            "code_interpreter": null,
            "file_search": null
        },
        "top_p": 1.0
    },
    {
        "id": "asst_ZxEwiKcwWKQ8JUFSJOCP1pyP",
        "created_at": 1727523044,
        "description": "The SupplementalIntakeCreator agent is responsible for creating a supplemental form for each condition found in the user meta.",
        "instructions": "1.) Get a list of conditions the user has from the user meta with the GetUserContext tool.\n2.) Create a supplemental intake for each condition found in the user meta.\n3.) Save the supplemental intakes into the Forms table using the CreateSupplementalForms tool.",
        "metadata": {},
        "model": "gpt-4o",
        "name": "SupplementalIntakeCreator",
        "object": "assistant",
        "tools": [
            {
                "function": {
                    "name": "GetUserContext",
                    "description": "Tool to get user context from the user context index.",
                    "parameters": {
                        "properties": {
                            "user_id": {
                                "description": "The user id of the user.",
                                "title": "User Id",
                                "type": "string"
                            },
                            "session_id": {
                                "description": "The session id to associate with the context.",
                                "title": "Session Id",
                                "type": "string"
                            },
                            "query": {
                                "description": "The query to run on the user context.",
                                "title": "Query",
                                "type": "string"
                            }
                        },
                        "required": [
                            "query",
                            "session_id",
                            "user_id"
                        ],
                        "type": "object"
                    },
                    "strict": false
                },
                "type": "function"
            },
            {
                "function": {
                    "name": "CreateSupplementalIntakes",
                    "description": "Tool to create a new supplemental intake forms for a user.",
                    "parameters": {
                        "properties": {
                            "user_id": {
                                "description": "The user id of the user.",
                                "title": "User Id",
                                "type": "string"
                            },
                            "conditions": {
                                "default": [],
                                "description": "The conditions for the form.",
                                "items": {
                                    "type": "string"
                                },
                                "title": "Conditions",
                                "type": "array"
                            }
                        },
                        "required": [
                            "user_id"
                        ],
                        "type": "object"
                    },
                    "strict": false
                },
                "type": "function"
            }
        ],
        "response_format": "auto",
        "temperature": 0.3,
        "tool_resources": {
            "code_interpreter": null,
            "file_search": null
        },
        "top_p": 1.0
    },
    {
        "id": "asst_qi7IDvPnjR15lhOFirp0nj2V",
        "created_at": 1727523769,
        "description": "You are a Report Section Writer for VA Claims that is extremely focused and never sound like ChatGPT.",
        "instructions": "Save the research into a report for the customer.",
        "metadata": {},
        "model": "gpt-4o",
        "name": "ReportSectionWriter",
        "object": "assistant",
        "tools": [
            {
                "function": {
                    "name": "GetReport",
                    "description": "Correctly extracted `GetReport` with all the required parameters with correct types",
                    "parameters": {
                        "properties": {
                            "user_id": {
                                "anyOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "title": "User Id"
                            }
                        },
                        "type": "object",
                        "required": []
                    },
                    "strict": false
                },
                "type": "function"
            },
            {
                "function": {
                    "name": "SendMessage",
                    "description": "Use this tool to facilitate direct, synchronous communication between \nspecialized agents within your agency. When you send a message using this tool, you receive a response exclusively from the \ndesignated recipient agent. To continue the dialogue, invoke this tool again with the desired recipient agent and your      \nfollow-up message. Remember, communication here is synchronous; the recipient agent won't perform any tasks post-response.  \nYou are responsible for relaying the recipient agent's responses back to the user, as the user does not have direct access  \nthese replies. Keep engaging with the tool for continuous interaction until the task is fully resolved. Do not send more than 1 message at a time.",
                    "parameters": {
                        "$defs": {
                            "recipient": {
                                "const": "BrowsingAgent",
                                "enum": [
                                    "BrowsingAgent"
                                ],
                                "title": "recipient",
                                "type": "string"
                            }
                        },
                        "properties": {
                            "my_primary_instructions": {
                                "description": "Please repeat your primary instructions step-by-step, including both completed and the following next steps that you need to perfrom. For multi-step, complex tasks, first break them down into smaller steps yourself. Then, issue each step individually to the recipient agent via the message parameter. Each identified step should be sent in separate message. Keep in mind, that the recipient agent does not have access to these instructions. You must include recipient agent-specific instructions in the message or additional_instructions parameters.",
                                "title": "My Primary Instructions",
                                "type": "string"
                            },
                            "recipient": {
                                "$ref": "#/$defs/recipient",
                                "description": "BrowsingAgent: You are an expert researching assisting the ReportSectionWriter in finding the most applicable scientific studies to support the connection between the condition and the veteran's service.\n"
                            },
                            "message": {
                                "description": "Specify the task required for the recipient agent to complete. Focus on clarifying what the task entails, rather than providing exact instructions.",
                                "title": "Message",
                                "type": "string"
                            },
                            "message_files": {
                                "anyOf": [
                                    {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "description": "A list of file ids to be sent as attachments to this message. Only use this if you have the file id that starts with 'file-'.",
                                "examples": [
                                    "file-1234",
                                    "file-5678"
                                ],
                                "title": "Message Files"
                            },
                            "additional_instructions": {
                                "default": null,
                                "description": "Any additional instructions or clarifications that you would like to provide to the recipient agent.",
                                "title": "Additional Instructions",
                                "type": "string"
                            }
                        },
                        "required": [
                            "message",
                            "my_primary_instructions",
                            "recipient"
                        ],
                        "type": "object"
                    },
                    "strict": false
                },
                "type": "function"
            },
            {
                "function": {
                    "name": "WriteConditionReportSection",
                    "description": "This class represents the WriteReportSection tool which is used to structure a section of the report.",
                    "parameters": {
                        "$defs": {
                            "ConditionScoring": {
                                "properties": {
                                    "score": {
                                        "anyOf": [
                                            {
                                                "type": "integer"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "default": null,
                                        "title": "Score"
                                    },
                                    "summary": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "default": null,
                                        "title": "Summary"
                                    }
                                },
                                "title": "ConditionScoring",
                                "type": "object"
                            },
                            "ConditionSection": {
                                "properties": {
                                    "condition": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "default": null,
                                        "title": "Condition"
                                    },
                                    "scoring": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/$defs/ConditionScoring"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "default": null
                                    },
                                    "summary": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "default": null,
                                        "title": "Summary"
                                    },
                                    "research": {
                                        "anyOf": [
                                            {
                                                "items": {
                                                    "$ref": "#/$defs/NexusResearch"
                                                },
                                                "type": "array"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "default": null,
                                        "title": "Research"
                                    },
                                    "nexus_letter": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/$defs/NexusLetter"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "default": null
                                    },
                                    "personal_statement": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "default": null,
                                        "title": "Personal Statement"
                                    },
                                    "keypoints": {
                                        "anyOf": [
                                            {
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "default": null,
                                        "title": "Keypoints"
                                    },
                                    "c_and_p_tips": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "default": null,
                                        "title": "C And P Tips"
                                    }
                                },
                                "title": "ConditionSection",
                                "type": "object"
                            },
                            "NexusLetter": {
                                "properties": {
                                    "letter": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "default": null,
                                        "title": "Letter"
                                    },
                                    "research": {
                                        "anyOf": [
                                            {
                                                "items": {
                                                    "$ref": "#/$defs/NexusResearch"
                                                },
                                                "type": "array"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "default": null,
                                        "title": "Research"
                                    }
                                },
                                "title": "NexusLetter",
                                "type": "object"
                            },
                            "NexusResearch": {
                                "properties": {
                                    "url": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "default": null,
                                        "title": "Url"
                                    },
                                    "summary": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "default": null,
                                        "title": "Summary"
                                    },
                                    "published_date": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "default": null,
                                        "title": "Published Date"
                                    },
                                    "author": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "default": null,
                                        "title": "Author"
                                    },
                                    "title": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "default": null,
                                        "title": "Title"
                                    }
                                },
                                "title": "NexusResearch",
                                "type": "object"
                            },
                            "Report": {
                                "properties": {
                                    "user_id": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "default": null,
                                        "title": "User Id"
                                    },
                                    "executive_summary": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "default": null,
                                        "title": "Executive Summary"
                                    },
                                    "condition_sections": {
                                        "anyOf": [
                                            {
                                                "items": {
                                                    "$ref": "#/$defs/ConditionSection"
                                                },
                                                "type": "array"
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ],
                                        "default": null,
                                        "title": "Condition Sections"
                                    }
                                },
                                "title": "Report",
                                "type": "object"
                            }
                        },
                        "properties": {
                            "user_id": {
                                "description": "The user id.",
                                "title": "User Id",
                                "type": "string"
                            },
                            "delta": {
                                "anyOf": [
                                    {
                                        "$ref": "#/$defs/Report"
                                    },
                                    {
                                        "$ref": "#/$defs/ConditionSection"
                                    }
                                ],
                                "description": "Updates, changes, or new sections to add to the report as a whole or for a particular ConditionSection with a specific condition.",
                                "title": "Delta"
                            }
                        },
                        "required": [
                            "delta",
                            "user_id"
                        ],
                        "type": "object"
                    },
                    "strict": false
                },
                "type": "function"
            }
        ],
        "response_format": "auto",
        "temperature": 0.3,
        "tool_resources": {
            "code_interpreter": null,
            "file_search": null
        },
        "top_p": 1.0
    },
    {
        "id": "asst_qJLP73c42ye9c0lwbU5mMBzg",
        "created_at": 1727526555,
        "description": "You are an expert researching assisting the ReportSectionWriter in finding the most applicable scientific studies to support the connection between the condition and the veteran's service.",
        "instructions": "You are an advanced browsing agent equipped with specialized tools to navigate and search the web effectively. Your primary objective is to fulfill the user's requests by efficiently utilizing these tools. When encountering uncertainty about the location of specific information on a website, employ the 'AnalyzeContent' tool to understand the structure of the page. Once you have found the information you are looking for, you will use the 'ReadPageText' or 'ReadPDF' tool to gather the contents of the page or PDF for analysis to read and understand the actual contents to report or write a summary of the page. Remember, you can only open and interact with 1 web page at a time. Do not try to read or click on multiple links. Finish analyzing your current web page first, before proceeding to a different source. Don't try to guess the direct url, always perform a google search if applicable, or return to your previous search results.Research and find 2 supporting scientific studies and include up to 2 supporting scientific studies if applicable to support the connection between the condition and the veteran's service. Use the following formatting criteria:\n[Title]\n[Author]\n[Journal]\n[Summary of the Study]\n[Excerpt 1 from the Study Relevant to the Nexus Letter]\n[Excerpt 2 from the Study Relevant to the Nexus Letter]\n[Excerpt 3 from the Study Relevant to the Nexus Letter]\n[Date]\n[URL]\n\nYou will also provide the full path to the ReportSectionWriter for inclusion within the Nexus Letter. The file can be a text, pdf, or json file.",
        "metadata": {},
        "model": "gpt-4o",
        "name": "BrowsingAgent",
        "object": "assistant",
        "tools": [
            {
                "function": {
                    "name": "Scroll",
                    "description": "This tool allows you to scroll the current web page up or down by 1 screen height.",
                    "parameters": {
                        "properties": {
                            "direction": {
                                "description": "Direction to scroll.",
                                "enum": [
                                    "up",
                                    "down"
                                ],
                                "title": "Direction",
                                "type": "string"
                            }
                        },
                        "required": [
                            "direction"
                        ],
                        "type": "object"
                    },
                    "strict": false
                },
                "type": "function"
            },
            {
                "function": {
                    "name": "SendKeys",
                    "description": "This tool sends keys into input fields on the current webpage based on the description of that element and what needs to be typed. It then clicks \"Enter\" on the last element to submit the form. You do not need to tell it to press \"Enter\"; it will do that automatically.",
                    "parameters": {
                        "properties": {
                            "description": {
                                "description": "Description of the inputs to send to the web page, clearly stated in natural language.",
                                "examples": [
                                    "Type 'hello' into the 'Search' input field.",
                                    "Type johndoe@gmail.com into the 'Email' input field, and type 'password123' into the 'Password' input field.",
                                    "Select the second option in the 'Country' dropdown."
                                ],
                                "title": "Description",
                                "type": "string"
                            }
                        },
                        "required": [
                            "description"
                        ],
                        "type": "object"
                    },
                    "strict": false
                },
                "type": "function"
            },
            {
                "function": {
                    "name": "ClickElement",
                    "description": "This tool clicks on an element on the current web page based on element or task description. Do not use this tool for input fields or dropdowns.",
                    "parameters": {
                        "properties": {
                            "description": {
                                "description": "Description of the element to click on in natural language.",
                                "example": "Click on the 'Sign Up' button.",
                                "title": "Description",
                                "type": "string"
                            }
                        },
                        "required": [
                            "description"
                        ],
                        "type": "object"
                    },
                    "strict": false
                },
                "type": "function"
            },
            {
                "function": {
                    "name": "ReadURL",
                    "description": "This tool reads a single URL and opens it in your current browser window. For each new source, go to a direct URL\nthat you think might contain the answer to the user's question or perform a google search like\n'https://google.com/search?q=search' if applicable. Otherwise, don't try to guess the direct url, use ClickElement tool\nto click on the link that you think might contain the desired information on the current web page.\nRemember, this tool only supports opening 1 URL at a time. Previous URL will be closed when you open a new one.\n    ",
                    "parameters": {
                        "properties": {
                            "url": {
                                "description": "URL of the webpage.",
                                "examples": [
                                    "https://google.com/search?q=search"
                                ],
                                "title": "Url",
                                "type": "string"
                            }
                        },
                        "required": [
                            "url"
                        ],
                        "type": "object"
                    },
                    "strict": false
                },
                "type": "function"
            },
            {
                "function": {
                    "name": "AnalyzeContent",
                    "description": "This tool analyzes the current web page to help understand how to navigate but not to actually navigate. Use the ReadPDF tools to review the actual contents of the page. Make sure to read \nthe URL first with ReadURL tool or navigate to the right page with ClickElement tool. Do not use this tool to get \ndirect links to other pages. It is not intended to be used for navigation.",
                    "parameters": {
                        "properties": {
                            "question": {
                                "description": "Question to ask about the elements of the current webpage to understand where to navigate next and where elements are located.",
                                "title": "Question",
                                "type": "string"
                            }
                        },
                        "required": [
                            "question"
                        ],
                        "type": "object"
                    },
                    "strict": false
                },
                "type": "function"
            },
            {
                "function": {
                    "name": "GoBack",
                    "description": "This tool allows you to go back 1 page in the browser history. Use it in case of a mistake or if a page shows you unexpected content.",
                    "parameters": {
                        "properties": {},
                        "type": "object",
                        "required": []
                    },
                    "strict": false
                },
                "type": "function"
            },
            {
                "function": {
                    "name": "SelectDropdown",
                    "description": "This tool selects an option in a dropdown on the current web page based on the description of that element and which option to select.",
                    "parameters": {
                        "properties": {
                            "description": {
                                "description": "Description of which option to select and for which dropdown on the page, clearly stated in natural langauge.",
                                "examples": [
                                    "Select Germany option in the 'Country' dropdown."
                                ],
                                "title": "Description",
                                "type": "string"
                            }
                        },
                        "required": [
                            "description"
                        ],
                        "type": "object"
                    },
                    "strict": false
                },
                "type": "function"
            },
            {
                "function": {
                    "name": "SolveCaptcha",
                    "description": "This tool asks a human to solve captcha on the current webpage. Make sure that captcha is visible before running it.",
                    "parameters": {
                        "properties": {},
                        "type": "object",
                        "required": []
                    },
                    "strict": false
                },
                "type": "function"
            },
            {
                "function": {
                    "name": "ReadPDF",
                    "description": "This tool reads the contents of a PDF file using the Browserless API.",
                    "parameters": {
                        "properties": {
                            "url": {
                                "description": "The URL of the PDF file to read.",
                                "title": "Url",
                                "type": "string"
                            }
                        },
                        "required": [
                            "url"
                        ],
                        "type": "object"
                    },
                    "strict": false
                },
                "type": "function"
            },
            {
                "function": {
                    "name": "ReadPageText",
                    "description": "This tool reads the text contents of an HTML file using the Browserless API. If the retrieval fails, we will use selenium to retrieve the text contents of the page.",
                    "parameters": {
                        "properties": {
                            "url": {
                                "description": "The URL of the HTML file to read.",
                                "title": "Url",
                                "type": "string"
                            }
                        },
                        "required": [
                            "url"
                        ],
                        "type": "object"
                    },
                    "strict": false
                },
                "type": "function"
            },
            {
                "function": {
                    "name": "SearchTool",
                    "description": "Use this tool to search for a query on Google and return a list of sites. You can also specify a list of reputable sites to search within if you want to limit the search results to those sites.",
                    "parameters": {
                        "properties": {
                            "reputable_sites": {
                                "default": null,
                                "description": "List of reputable sites to search within.",
                                "items": {
                                    "type": "string"
                                },
                                "title": "Reputable Sites",
                                "type": "array"
                            },
                            "query": {
                                "description": "The query to search for.",
                                "title": "Query",
                                "type": "string"
                            }
                        },
                        "required": [
                            "query"
                        ],
                        "type": "object"
                    },
                    "strict": false
                },
                "type": "function"
            }
        ],
        "response_format": "auto",
        "temperature": 0.3,
        "tool_resources": {
            "code_interpreter": null,
            "file_search": null
        },
        "top_p": 1.0
    },
    {
        "id": "asst_BvRMJw9S4Nq55yL5aT8QzKa1",
        "created_at": 1727571651,
        "description": "This agent retrieves the intake form for a customer based on the provided customer ID.",
        "instructions": "1. Receive the customer ID as input.\n2. Query the database or storage system to locate the intake form associated with the provided customer ID.\n3. Retrieve and return the intake form.",
        "metadata": {},
        "model": "gpt-4o",
        "name": "IntakeFormRetriever",
        "object": "assistant",
        "tools": [],
        "response_format": "auto",
        "temperature": 0.3,
        "tool_resources": {
            "code_interpreter": null,
            "file_search": null
        },
        "top_p": 1.0
    },
    {
        "id": "asst_YU5qaXpQDF0chCtEBoz4sxBv",
        "created_at": 1727572797,
        "description": "Agent specialized in retrieving and handling forms based on provided metadata.",
        "instructions": "1. Use the provided customer metadata to locate the relevant intake form.\n2. Ensure the form is complete and accurate.\n3. Retrieve the form and provide it to the requesting party.",
        "metadata": {},
        "model": "gpt-4o",
        "name": "FormRetriever",
        "object": "assistant",
        "tools": [
            {
                "function": {
                    "name": "RetrieveContext",
                    "description": "This class represents the RetrieveContext tool which returns seeded data and historical examples that can be used to create new agents, models, steps. Models are saved copies of successfully tested node structures that can be used to create a new set of steps.",
                    "parameters": {
                        "properties": {
                            "type": {
                                "description": "The type of the context to retrieve.",
                                "enum": [
                                    "user_meta",
                                    "form",
                                    "step",
                                    "model"
                                ],
                                "title": "Type",
                                "type": "string"
                            },
                            "key": {
                                "anyOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "description": "The key of the context to retrieve.",
                                "title": "Key"
                            },
                            "query": {
                                "description": "The query of the context to retrieval.",
                                "title": "Query",
                                "type": "string"
                            },
                            "session_id": {
                                "anyOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "description": "The session ID for the context.",
                                "title": "Session Id"
                            }
                        },
                        "required": [
                            "query",
                            "type"
                        ],
                        "type": "object"
                    },
                    "strict": false
                },
                "type": "function"
            }
        ],
        "response_format": "auto",
        "temperature": 0.3,
        "tool_resources": {
            "code_interpreter": null,
            "file_search": null
        },
        "top_p": 1.0
    },
    {
        "id": "asst_vQr6SQVgz3g00o403oJSRUsy",
        "created_at": 1727575658,
        "description": "An agent specialized in gathering and documenting intake conditions from customers.",
        "instructions": "1. Introduction: Greet the customer and explain the purpose of gathering intake conditions.\n2. Questionnaire: Ask a series of questions to understand the customer's current condition, medical history, and any relevant symptoms.\n3. Documentation: Accurately document the responses provided by the customer.\n4. Clarification: If any responses are unclear, ask follow-up questions to ensure all information is accurate and complete.\n5. Summary: Provide a summary of the gathered information to the customer for confirmation.\n6. Finalization: Confirm that all necessary information has been collected and thank the customer for their cooperation.",
        "metadata": {},
        "model": "gpt-4o",
        "name": "Intake Specialist",
        "object": "assistant",
        "tools": [],
        "response_format": "auto",
        "temperature": 0.3,
        "tool_resources": {
            "code_interpreter": null,
            "file_search": null
        },
        "top_p": 1.0
    },
    {
        "id": "asst_1Y9fQHilcne4CrOUvQEiFKeQ",
        "created_at": 1727579081,
        "description": "Agent specialized in extracting and organizing data from forms.",
        "instructions": "1. Review the provided intake form.\n2. Identify and extract the conditions selected by the customer.\n3. Organize the extracted conditions into a list.\n4. Provide the list of conditions as the output.",
        "metadata": {},
        "model": "gpt-4o",
        "name": "FormDataExtractor",
        "object": "assistant",
        "tools": [
            {
                "function": {
                    "name": "RetrieveContext",
                    "description": "This class represents the RetrieveContext tool which returns seeded data and historical examples that can be used to create new agents, models, steps. Models are saved copies of successfully tested node structures that can be used to create a new set of steps.",
                    "parameters": {
                        "properties": {
                            "type": {
                                "description": "The type of the context to retrieve.",
                                "enum": [
                                    "user_meta",
                                    "form",
                                    "step",
                                    "model"
                                ],
                                "title": "Type",
                                "type": "string"
                            },
                            "key": {
                                "anyOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "description": "The key of the context to retrieve.",
                                "title": "Key"
                            },
                            "query": {
                                "description": "The query of the context to retrieval.",
                                "title": "Query",
                                "type": "string"
                            },
                            "session_id": {
                                "anyOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "description": "The session ID for the context.",
                                "title": "Session Id"
                            }
                        },
                        "required": [
                            "query",
                            "type"
                        ],
                        "type": "object"
                    },
                    "strict": false
                },
                "type": "function"
            }
        ],
        "response_format": "auto",
        "temperature": 0.3,
        "tool_resources": {
            "code_interpreter": null,
            "file_search": null
        },
        "top_p": 1.0
    },
    {
        "id": "asst_IcIn0O6Deb8sRSzwi5tnKwZ4",
        "created_at": 1727582904,
        "description": "An agent specialized in extracting intake conditions from customer metadata and supplemental forms.",
        "instructions": "1. Review Customer Metadata: Extract relevant intake conditions from the provided customer metadata.\n2. Analyze Supplemental Forms: Examine the supplemental forms to identify any additional intake conditions.\n3. Compile Intake Conditions: Create a comprehensive list of all intake conditions identified from both sources.\n4. Validate Data: Ensure that the gathered intake conditions are accurate and complete.",
        "metadata": {},
        "model": "gpt-4o",
        "name": "IntakeConditionCollector",
        "object": "assistant",
        "tools": [],
        "response_format": "auto",
        "temperature": 0.3,
        "tool_resources": {
            "code_interpreter": null,
            "file_search": null
        },
        "top_p": 1.0
    },
    {
        "id": "asst_80gxy8X7C7L0zqJcS1IEhRav",
        "created_at": 1727582934,
        "description": "This agent is responsible for gathering and organizing the intake conditions of the customer from the provided raw data.",
        "instructions": "1. Collect Data: Gather all the relevant intake conditions from the provided customer data.\n2. Organize Data: Structure the collected data into a predefined format for easy processing.\n3. Verify Data: Ensure that all necessary intake conditions are collected and organized correctly.\n4. Output Data: Provide the structured set of intake conditions ready for further processing.",
        "metadata": {},
        "model": "gpt-4o",
        "name": "DataOrganizer",
        "object": "assistant",
        "tools": [],
        "response_format": "auto",
        "temperature": 0.3,
        "tool_resources": {
            "code_interpreter": null,
            "file_search": null
        },
        "top_p": 1.0
    },
    {
        "id": "asst_URev3zpnCuqP0iuq3oBWWztc",
        "created_at": 1727584125,
        "description": "This agent is designed to gather comprehensive customer data including personal information, purchase history, and feedback.",
        "instructions": "1. Collect personal information of customers (name, age, gender, contact details).\n2. Retrieve purchase history (items bought, dates of purchase, amounts spent).\n3. Gather customer feedback (reviews, ratings, comments).\n4. Compile all collected data into a comprehensive dataset.",
        "metadata": {},
        "model": "gpt-4o",
        "name": "Customer Data Collector",
        "object": "assistant",
        "tools": [],
        "response_format": "auto",
        "temperature": 0.3,
        "tool_resources": {
            "code_interpreter": null,
            "file_search": null
        },
        "top_p": 1.0
    }
]